{
    "contractName": "WrappedCoffeeCoin",
    "abi": [
        {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_ipfs",
                    "type": "string"
                }
            ],
            "name": "updateCoffee",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "getCoffee",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "coffeeHandler",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "isOwner",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "addMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "renounceMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "isMinter",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_coffeeHandler",
                    "type": "address"
                }
            ],
            "name": "setCoffeeHandler",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_owner",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_contract",
                    "type": "address"
                }
            ],
            "name": "LogSetCoffeeHandler",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "MinterAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "MinterRemoved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfs\",\"type\":\"string\"}],\"name\":\"updateCoffee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCoffee\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coffeeHandler\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coffeeHandler\",\"type\":\"address\"}],\"name\":\"setCoffeeHandler\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"LogSetCoffeeHandler\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"When deploying the contract the deployer should renounce the minter role after it has added the TokenHandler as minter.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"mint(address,uint256)\":{\"details\":\"See `ERC20._mint`.    * Requirements:    * - the caller must have the `MinterRole`. TODO:  Farmer must approve mint before minting\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"getCoffee()\":{\"notice\":\"Returns the hash pointer to the file containing the details about the coffee this token represents.    \"},\"mint(address,uint256)\":{\"notice\":\"Called when a minter wants to create new tokens.\"},\"updateCoffee(string)\":{\"notice\":\"Updates the IPFS pointer for the information about this coffee.    \"}},\"notice\":\"An ERC that will represent deposited coffee to a validator.\"}},\"settings\":{\"compilationTarget\":{\"/home/crisgarner/Projects/affogato/wcc/contracts/WrappedCoffeeCoin.sol\":\"WrappedCoffeeCoin\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/crisgarner/Projects/affogato/wcc/contracts/IERC20WCC.sol\":{\"keccak256\":\"0x788ea050a4372a82906c98ea6789d88b2e04a60a4867440997c98961f2f3a439\",\"urls\":[\"bzz-raw://f8a882ce2246833c1f143f96199a2fd9f4e691e7aff64bfacccb4cfd7f5658d2\",\"dweb:/ipfs/QmQnjMBkdfzfyvMQsUHbK2VvnrX7Haf1aSc9uAkBbqMgSa\"]},\"/home/crisgarner/Projects/affogato/wcc/contracts/WrappedCoffeeCoin.sol\":{\"keccak256\":\"0x66a8d8a44c906d7080bcd7f5607f108d136cd967e6193384fade9d3d58c56666\",\"urls\":[\"bzz-raw://33be4ef6dd101d544fc4887250a379911512454007cf49495b6f6f9df1f0505b\",\"dweb:/ipfs/QmRncBjYDa16F5JdgLeTw4U8cDcBKemscGJFZER3GRjiZB\"]},\"/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\",\"urls\":[\"bzz-raw://696a75bc2c55407ce8251ccc7d19ecb1b7b2be1796a160a6524312babcc7e3d4\",\"dweb:/ipfs/QmQViKEp3y99h9uhRssE29TmjBKRnFMaoz3eJZ4eggggg2\"]},\"/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\",\"urls\":[\"bzz-raw://45c0d95495b944fbb1aa09d900b0ab530903a432125ab8fddfa05064a7988991\",\"dweb:/ipfs/Qma2VeknkKA1THeubGzshWFk44BktXkXP1UKp9Un2uDSsu\"]},\"/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b506040518060400160405280601381526020017f5772617070656420436f6666656520436f696e000000000000000000000000008152506040518060400160405280600381526020017f57434300000000000000000000000000000000000000000000000000000000008152506000826003908051906020019062000098929190620002d5565b508151620000ae906004906020850190620002d5565b506005805460ff191660ff9290921691909117905550620000d0905062000154565b60058054610100600160a81b0319166101006001600160a01b03938416810291909117918290556040519104909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36200014e6200013f6001600160e01b036200015416565b6001600160e01b036200015916565b62000377565b335b90565b62000174816006620001ab60201b620013e71790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620001c082826001600160e01b036200025216565b156200022d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620002b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062001b636022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031857805160ff191683800117855562000348565b8280016001018555821562000348579182015b82811115620003485782518255916020019190600101906200032b565b50620003569291506200035a565b5090565b6200015691905b8082111562000356576000815560010162000361565b6117dc80620003876000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063a457c2d71161007c578063a457c2d714610454578063a9059cbb14610480578063aa271e1a146104ac578063b070a4e4146104d2578063dd62ed3e146104f8578063f2fde38b1461052657610158565b80638da5cb5b146103e25780638f32d59b146103ea57806395d89b41146103f2578063983b2d56146103fa57806398650275146104205780639dc29fac1461042857610158565b8063313ce56711610115578063313ce5671461031a578063395093511461033857806340c10f19146103645780636e830b131461039057806370a08231146103b4578063715018a6146103da57610158565b806306fdde031461015d578063095ea7b3146101da5780630f7962e51461021a57806318160ddd146102c25780631d134704146102dc57806323b872dd146102e4575b600080fd5b61016561054c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019f578181015183820152602001610187565b50505050905090810190601f1680156101cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610206600480360360408110156101f057600080fd5b506001600160a01b0381351690602001356105e3565b604080519115158252519081900360200190f35b6102c06004803603602081101561023057600080fd5b81019060208101813564010000000081111561024b57600080fd5b82018360208201111561025d57600080fd5b8035906020019184600183028401116401000000008311171561027f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610600945050505050565b005b6102ca61069f565b60408051918252519081900360200190f35b6101656106a5565b610206600480360360608110156102fa57600080fd5b506001600160a01b03813581169160208101359091169060400135610706565b610322610793565b6040805160ff9092168252519081900360200190f35b6102066004803603604081101561034e57600080fd5b506001600160a01b03813516906020013561079c565b6102066004803603604081101561037a57600080fd5b506001600160a01b0381351690602001356107f0565b61039861089f565b604080516001600160a01b039092168252519081900360200190f35b6102ca600480360360208110156103ca57600080fd5b50356001600160a01b03166108ae565b6102c06108c9565b610398610972565b610206610986565b6101656109b1565b6102c06004803603602081101561041057600080fd5b50356001600160a01b0316610a12565b6102c0610a64565b6102066004803603604081101561043e57600080fd5b506001600160a01b038135169060200135610a76565b6102066004803603604081101561046a57600080fd5b506001600160a01b038135169060200135610b25565b6102066004803603604081101561049657600080fd5b506001600160a01b038135169060200135610b93565b610206600480360360208110156104c257600080fd5b50356001600160a01b0316610ba7565b6102c0600480360360208110156104e857600080fd5b50356001600160a01b0316610bc0565b6102ca6004803603604081101561050e57600080fd5b506001600160a01b0381358116916020013516610c87565b6102c06004803603602081101561053c57600080fd5b50356001600160a01b0316610cb2565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105d85780601f106105ad576101008083540402835291602001916105d8565b820191906000526020600020905b8154815290600101906020018083116105bb57829003601f168201915b505050505090505b90565b60006105f76105f0610d14565b8484610d18565b50600192915050565b61061061060b610d14565b610ba7565b61064b5760405162461bcd60e51b815260040180806020018281038252603081526020018061165d6030913960400191505060405180910390fd5b80516106885760405162461bcd60e51b81526004018080602001828103825260218152602001806117626021913960400191505060405180910390fd5b805161069b906007906020840190611511565b5050565b60025490565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105d85780601f106105ad576101008083540402835291602001916105d8565b6000610713848484610e04565b6107898461071f610d14565b610784856040518060600160405280602881526020016116ae602891396001600160a01b038a1660009081526001602052604081209061075d610d14565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610f6016565b610d18565b5060019392505050565b60055460ff1690565b60006105f76107a9610d14565b8461078485600160006107ba610d14565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610ff716565b60006107fd61060b610d14565b6108385760405162461bcd60e51b815260040180806020018281038252603081526020018061165d6030913960400191505060405180910390fd5b6008546001600160a01b0316610895576040805162461bcd60e51b815260206004820152601a60248201527f436f666665652048616e646c6572206d75737420626520736574000000000000604482015290519081900360640190fd5b6105f78383611058565b6008546001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b6108d1610986565b610922576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60055460009061010090046001600160a01b03166109a2610d14565b6001600160a01b031614905090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105d85780601f106105ad576101008083540402835291602001916105d8565b610a1d61060b610d14565b610a585760405162461bcd60e51b815260040180806020018281038252603081526020018061165d6030913960400191505060405180910390fd5b610a6181611148565b50565b610a74610a6f610d14565b611190565b565b6000610a8361060b610d14565b610abe5760405162461bcd60e51b815260040180806020018281038252603081526020018061165d6030913960400191505060405180910390fd5b6008546001600160a01b0316610b1b576040805162461bcd60e51b815260206004820152601a60248201527f436f666665652048616e646c6572206d75737420626520736574000000000000604482015290519081900360640190fd5b6105f783836111d8565b60006105f7610b32610d14565b84610784856040518060600160405280602581526020016117836025913960016000610b5c610d14565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610f6016565b60006105f7610ba0610d14565b8484610e04565b6000610bba60068363ffffffff6112d416565b92915050565b610bc8610986565b610c19576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610c2281610a12565b600880546001600160a01b0319166001600160a01b038316179055610c45610a64565b604080516001600160a01b0383168152905133917f98f8f056a8c545b6b483f1782b3e55920dfc4a2feac02b6d69ff1f30d53ffd2c919081900360200190a250565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610cba610986565b610d0b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610a618161133b565b3390565b6001600160a01b038316610d5d5760405162461bcd60e51b815260040180806020018281038252602481526020018061173e6024913960400191505060405180910390fd5b6001600160a01b038216610da25760405162461bcd60e51b81526004018080602001828103825260228152602001806116156022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610e495760405162461bcd60e51b81526004018080602001828103825260258152602001806117196025913960400191505060405180910390fd5b6001600160a01b038216610e8e5760405162461bcd60e51b81526004018080602001828103825260238152602001806115aa6023913960400191505060405180910390fd5b610ed181604051806060016040528060268152602001611637602691396001600160a01b038616600090815260208190526040902054919063ffffffff610f6016565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610f06908263ffffffff610ff716565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610fef5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fb4578181015183820152602001610f9c565b50505050905090810190601f168015610fe15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015611051576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166110b3576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6002546110c6908263ffffffff610ff716565b6002556001600160a01b0382166000908152602081905260409020546110f2908263ffffffff610ff716565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61115960068263ffffffff6113e716565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6111a160068263ffffffff61146816565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6001600160a01b03821661121d5760405162461bcd60e51b81526004018080602001828103825260218152602001806116f86021913960400191505060405180910390fd5b611260816040518060600160405280602281526020016115cd602291396001600160a01b038516600090815260208190526040902054919063ffffffff610f6016565b6001600160a01b03831660009081526020819052604090205560025461128c908263ffffffff6114cf16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006001600160a01b03821661131b5760405162461bcd60e51b81526004018080602001828103825260228152602001806116d66022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b0381166113805760405162461bcd60e51b81526004018080602001828103825260268152602001806115ef6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6113f182826112d4565b15611443576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61147282826112d4565b6114ad5760405162461bcd60e51b815260040180806020018281038252602181526020018061168d6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b600061105183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f60565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061155257805160ff191683800117855561157f565b8280016001018555821561157f579182015b8281111561157f578251825591602001919060010190611564565b5061158b92915061158f565b5090565b6105e091905b8082111561158b576000815560010161159556fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373546865204950465320706f696e7465722063616e6e6f7420626520656d7074792e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820dd932dc3f0aa0b0426f5c13b71244b51c1ed0e3bff62ce9ca9cb9eeeceecf10c64736f6c634300050b0032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063a457c2d71161007c578063a457c2d714610454578063a9059cbb14610480578063aa271e1a146104ac578063b070a4e4146104d2578063dd62ed3e146104f8578063f2fde38b1461052657610158565b80638da5cb5b146103e25780638f32d59b146103ea57806395d89b41146103f2578063983b2d56146103fa57806398650275146104205780639dc29fac1461042857610158565b8063313ce56711610115578063313ce5671461031a578063395093511461033857806340c10f19146103645780636e830b131461039057806370a08231146103b4578063715018a6146103da57610158565b806306fdde031461015d578063095ea7b3146101da5780630f7962e51461021a57806318160ddd146102c25780631d134704146102dc57806323b872dd146102e4575b600080fd5b61016561054c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019f578181015183820152602001610187565b50505050905090810190601f1680156101cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610206600480360360408110156101f057600080fd5b506001600160a01b0381351690602001356105e3565b604080519115158252519081900360200190f35b6102c06004803603602081101561023057600080fd5b81019060208101813564010000000081111561024b57600080fd5b82018360208201111561025d57600080fd5b8035906020019184600183028401116401000000008311171561027f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610600945050505050565b005b6102ca61069f565b60408051918252519081900360200190f35b6101656106a5565b610206600480360360608110156102fa57600080fd5b506001600160a01b03813581169160208101359091169060400135610706565b610322610793565b6040805160ff9092168252519081900360200190f35b6102066004803603604081101561034e57600080fd5b506001600160a01b03813516906020013561079c565b6102066004803603604081101561037a57600080fd5b506001600160a01b0381351690602001356107f0565b61039861089f565b604080516001600160a01b039092168252519081900360200190f35b6102ca600480360360208110156103ca57600080fd5b50356001600160a01b03166108ae565b6102c06108c9565b610398610972565b610206610986565b6101656109b1565b6102c06004803603602081101561041057600080fd5b50356001600160a01b0316610a12565b6102c0610a64565b6102066004803603604081101561043e57600080fd5b506001600160a01b038135169060200135610a76565b6102066004803603604081101561046a57600080fd5b506001600160a01b038135169060200135610b25565b6102066004803603604081101561049657600080fd5b506001600160a01b038135169060200135610b93565b610206600480360360208110156104c257600080fd5b50356001600160a01b0316610ba7565b6102c0600480360360208110156104e857600080fd5b50356001600160a01b0316610bc0565b6102ca6004803603604081101561050e57600080fd5b506001600160a01b0381358116916020013516610c87565b6102c06004803603602081101561053c57600080fd5b50356001600160a01b0316610cb2565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105d85780601f106105ad576101008083540402835291602001916105d8565b820191906000526020600020905b8154815290600101906020018083116105bb57829003601f168201915b505050505090505b90565b60006105f76105f0610d14565b8484610d18565b50600192915050565b61061061060b610d14565b610ba7565b61064b5760405162461bcd60e51b815260040180806020018281038252603081526020018061165d6030913960400191505060405180910390fd5b80516106885760405162461bcd60e51b81526004018080602001828103825260218152602001806117626021913960400191505060405180910390fd5b805161069b906007906020840190611511565b5050565b60025490565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105d85780601f106105ad576101008083540402835291602001916105d8565b6000610713848484610e04565b6107898461071f610d14565b610784856040518060600160405280602881526020016116ae602891396001600160a01b038a1660009081526001602052604081209061075d610d14565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610f6016565b610d18565b5060019392505050565b60055460ff1690565b60006105f76107a9610d14565b8461078485600160006107ba610d14565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610ff716565b60006107fd61060b610d14565b6108385760405162461bcd60e51b815260040180806020018281038252603081526020018061165d6030913960400191505060405180910390fd5b6008546001600160a01b0316610895576040805162461bcd60e51b815260206004820152601a60248201527f436f666665652048616e646c6572206d75737420626520736574000000000000604482015290519081900360640190fd5b6105f78383611058565b6008546001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b6108d1610986565b610922576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60055460009061010090046001600160a01b03166109a2610d14565b6001600160a01b031614905090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105d85780601f106105ad576101008083540402835291602001916105d8565b610a1d61060b610d14565b610a585760405162461bcd60e51b815260040180806020018281038252603081526020018061165d6030913960400191505060405180910390fd5b610a6181611148565b50565b610a74610a6f610d14565b611190565b565b6000610a8361060b610d14565b610abe5760405162461bcd60e51b815260040180806020018281038252603081526020018061165d6030913960400191505060405180910390fd5b6008546001600160a01b0316610b1b576040805162461bcd60e51b815260206004820152601a60248201527f436f666665652048616e646c6572206d75737420626520736574000000000000604482015290519081900360640190fd5b6105f783836111d8565b60006105f7610b32610d14565b84610784856040518060600160405280602581526020016117836025913960016000610b5c610d14565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610f6016565b60006105f7610ba0610d14565b8484610e04565b6000610bba60068363ffffffff6112d416565b92915050565b610bc8610986565b610c19576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610c2281610a12565b600880546001600160a01b0319166001600160a01b038316179055610c45610a64565b604080516001600160a01b0383168152905133917f98f8f056a8c545b6b483f1782b3e55920dfc4a2feac02b6d69ff1f30d53ffd2c919081900360200190a250565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610cba610986565b610d0b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610a618161133b565b3390565b6001600160a01b038316610d5d5760405162461bcd60e51b815260040180806020018281038252602481526020018061173e6024913960400191505060405180910390fd5b6001600160a01b038216610da25760405162461bcd60e51b81526004018080602001828103825260228152602001806116156022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610e495760405162461bcd60e51b81526004018080602001828103825260258152602001806117196025913960400191505060405180910390fd5b6001600160a01b038216610e8e5760405162461bcd60e51b81526004018080602001828103825260238152602001806115aa6023913960400191505060405180910390fd5b610ed181604051806060016040528060268152602001611637602691396001600160a01b038616600090815260208190526040902054919063ffffffff610f6016565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610f06908263ffffffff610ff716565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610fef5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fb4578181015183820152602001610f9c565b50505050905090810190601f168015610fe15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015611051576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166110b3576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6002546110c6908263ffffffff610ff716565b6002556001600160a01b0382166000908152602081905260409020546110f2908263ffffffff610ff716565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61115960068263ffffffff6113e716565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6111a160068263ffffffff61146816565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6001600160a01b03821661121d5760405162461bcd60e51b81526004018080602001828103825260218152602001806116f86021913960400191505060405180910390fd5b611260816040518060600160405280602281526020016115cd602291396001600160a01b038516600090815260208190526040902054919063ffffffff610f6016565b6001600160a01b03831660009081526020819052604090205560025461128c908263ffffffff6114cf16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006001600160a01b03821661131b5760405162461bcd60e51b81526004018080602001828103825260228152602001806116d66022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b0381166113805760405162461bcd60e51b81526004018080602001828103825260268152602001806115ef6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6113f182826112d4565b15611443576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61147282826112d4565b6114ad5760405162461bcd60e51b815260040180806020018281038252602181526020018061168d6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b600061105183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f60565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061155257805160ff191683800117855561157f565b8280016001018555821561157f579182015b8281111561157f578251825591602001919060010190611564565b5061158b92915061158f565b5090565b6105e091905b8082111561158b576000815560010161159556fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373546865204950465320706f696e7465722063616e6e6f7420626520656d7074792e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820dd932dc3f0aa0b0426f5c13b71244b51c1ed0e3bff62ce9ca9cb9eeeceecf10c64736f6c634300050b0032",
    "sourceMap": "707:1638:1:-;;;916:70;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:70:1;416:163:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:1:1;512:4:8;504:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;526:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:8;:20;;-1:-1:-1;;552:20:8;;;;;;;;;;;;-1:-1:-1;707:12:6;;-1:-1:-1;707:10:6;:12::i;:::-;698:6;:21;;-1:-1:-1;;;;;;698:21:6;;-1:-1:-1;;;;;698:21:6;;;;;;;;;;;;;734:40;;767:6;;;;;;-1:-1:-1;;734:40:6;;-1:-1:-1;;734:40:6;318:24:4;329:12;-1:-1:-1;;;;;329:10:4;:12;:::i;:::-;-1:-1:-1;;;;;318:10:4;:24;:::i;:::-;707:1638:1;;788:96:2;867:10;788:96;;:::o;786:119:4:-;842:21;855:7;842:8;:12;;;;;;:21;;;;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:4;;;;;;;;786:119;:::o;260:175:3:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:3;:18;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:3;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:3;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:3;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:3;:11;:20;;;;;;;;;;;;;;;779:200::o;707:1638:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;707:1638:1;;;-1:-1:-1;707:1638:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "707:1638:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;707:1638:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:149:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2500:149:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2179:164:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2179:164:1;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2179:164:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2179:164:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2179:164:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2179:164:1;;-1:-1:-1;2179:164:1;;-1:-1:-1;;;;;2179:164:1:i;:::-;;1559:89:7;;;:::i;:::-;;;;;;;;;;;;;;;;1996:82:1;;;:::i;3107:300:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3107:300:7;;;;;;;;;;;;;;;;;:::i;1472:81:8:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3802:207:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3802:207:7;;;;;;;;:::i;1451:202:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1451:202:1;;;;;;;;:::i;883:28::-;;;:::i;:::-;;;;-1:-1:-1;;;;;883:28:1;;;;;;;;;;;;;;1706:108:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1706:108:7;-1:-1:-1;;;;;1706:108:7;;:::i;1642:137:6:-;;;:::i;857:77::-;;;:::i;1208:92::-;;;:::i;838:85:8:-;;;:::i;607:90:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;607:90:4;-1:-1:-1;;;;;607:90:4;;:::i;703:77::-;;;:::i;1657:202:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1657:202:1;;;;;;;;:::i;4496:258:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4496:258:7;;;;;;;;:::i;2017:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2017:155:7;;;;;;;;:::i;494:107:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;494:107:4;-1:-1:-1;;;;;494:107:4;;:::i;990:218:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;990:218:1;-1:-1:-1;;;;;990:218:1;;:::i;2230:132:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2230:132:7;;;;;;;;;;:::i;1928:107:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1928:107:6;-1:-1:-1;;;;;1928:107:6;;:::i;644:81:8:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;;:::o;2500:149:7:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;-1:-1:-1;2638:4:7;2500:149;;;;:::o;2179:164:1:-;395:22:4;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;-1:-1:-1;;;387:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:19:1;;2246:70;;;;-1:-1:-1;;;2246:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:16;;;;:8;;:16;;;;;:::i;:::-;;2179:164;:::o;1559:89:7:-;1629:12;;1559:89;:::o;1996:82:1:-;2065:8;2058:15;;;;;;;;-1:-1:-1;;2058:15:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2037:13;;2058:15;;2065:8;;2058:15;;2065:8;2058:15;;;;;;;;;;;;;;;;;;;;;;;;3107:300:7;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3289:19:7;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;-1:-1:-1;;;;;3289:33:7;;;;;;;;;;;;-1:-1:-1;3289:33:7;;;:89;;:37;:89;:::i;:::-;3258:8;:121::i;:::-;-1:-1:-1;3396:4:7;3107:300;;;;;:::o;1472:81:8:-;1537:9;;;;1472:81;:::o;3802:207:7:-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;-1:-1:-1;;;;;3930:25:7;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:7;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1451:202:1:-;1525:4;395:22:4;404:12;:10;:12::i;395:22::-;387:83;;;;-1:-1:-1;;;387:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1545:13:1;;-1:-1:-1;;;;;1545:13:1;1537:66;;;;;-1:-1:-1;;;1537:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1609:22;1615:7;1624:6;1609:5;:22::i;883:28::-;;;-1:-1:-1;;;;;883:28:1;;:::o;1706:108:7:-;-1:-1:-1;;;;;1789:18:7;1763:7;1789:18;;;;;;;;;;;;1706:108::o;1642:137:6:-;1061:9;:7;:9::i;:::-;1053:54;;;;;-1:-1:-1;;;1053:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1724:6;;1703:40;;1740:1;;1724:6;;;-1:-1:-1;;;;;1724:6:6;;1703:40;;1740:1;;1703:40;1753:6;:19;;-1:-1:-1;;;;;;1753:19:6;;;1642:137::o;857:77::-;921:6;;;;;-1:-1:-1;;;;;921:6:6;;857:77::o;1208:92::-;1287:6;;1248:4;;1287:6;;;-1:-1:-1;;;;;1287:6:6;1271:12;:10;:12::i;:::-;-1:-1:-1;;;;;1271:22:6;;1264:29;;1208:92;:::o;838:85:8:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;607:90:4;395:22;404:12;:10;:12::i;395:22::-;387:83;;;;-1:-1:-1;;;387:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:19;682:7;671:10;:19::i;:::-;607:90;:::o;703:77::-;746:27;760:12;:10;:12::i;:::-;746:13;:27::i;:::-;703:77::o;1657:202:1:-;1731:4;395:22:4;404:12;:10;:12::i;395:22::-;387:83;;;;-1:-1:-1;;;387:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1751:13:1;;-1:-1:-1;;;;;1751:13:1;1743:66;;;;;-1:-1:-1;;;1743:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:22;1821:7;1830:6;1815:5;:22::i;4496:258:7:-;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;-1:-1:-1;;;;;4629:25:7;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:7;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;494:107:4:-;550:4;573:21;:8;586:7;573:21;:12;:21;:::i;:::-;566:28;494:107;-1:-1:-1;;494:107:4:o;990:218:1:-;1061:9:6;:7;:9::i;:::-;1053:54;;;;;-1:-1:-1;;;1053:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:25:1;1072:14;1062:9;:25::i;:::-;1093:13;:30;;-1:-1:-1;;;;;;1093:30:1;-1:-1:-1;;;;;1093:30:1;;;;;1129:16;:14;:16::i;:::-;1156:47;;;-1:-1:-1;;;;;1156:47:1;;;;;;1176:10;;1156:47;;;;;;;;;;990:218;:::o;2230:132:7:-;-1:-1:-1;;;;;2328:18:7;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;1928:107:6:-;1061:9;:7;:9::i;:::-;1053:54;;;;;-1:-1:-1;;;1053:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:28;2019:8;2000:18;:28::i;788:96:2:-;867:10;788:96;:::o;7351:332:7:-;-1:-1:-1;;;;;7444:19:7;;7436:68;;;;-1:-1:-1;;;7436:68:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7522:21:7;;7514:68;;;;-1:-1:-1;;;7514:68:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7593:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7644:32;;;;;;;;;;;;;;;;;7351:332;;;:::o;5228:464::-;-1:-1:-1;;;;;5325:20:7;;5317:70;;;;-1:-1:-1;;;5317:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5405:23:7;;5397:71;;;;-1:-1:-1;;;5397:71:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5499:17:7;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5479:17:7;;;:9;:17;;;;;;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5580:20:7;;;:9;:20;;;;;;;;;;;;:55;;;;5650:35;;;;;;;5580:20;;5650:35;;;;;;;;;;;;;5228:464;;;:::o;1732:187:5:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:5;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:5:o;5962:302:7:-;-1:-1:-1;;;;;6037:21:7;;6029:65;;;;;-1:-1:-1;;;6029:65:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:12;;:24;;6137:6;6120:24;:16;:24;:::i;:::-;6105:12;:39;-1:-1:-1;;;;;6175:18:7;;:9;:18;;;;;;;;;;;:30;;6198:6;6175:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6154:18:7;;:9;:18;;;;;;;;;;;:51;;;;6220:37;;;;;;;6154:18;;:9;;6220:37;;;;;;;;;;5962:302;;:::o;786:119:4:-;842:21;:8;855:7;842:21;:12;:21;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:4;;;;;;;;786:119;:::o;911:127::-;970:24;:8;986:7;970:24;:15;:24;:::i;:::-;1009:22;;-1:-1:-1;;;;;1009:22:4;;;;;;;;911:127;:::o;6584:342:7:-;-1:-1:-1;;;;;6659:21:7;;6651:67;;;;-1:-1:-1;;;6651:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6750:68;6773:6;6750:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6750:18:7;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6729:18:7;;:9;:18;;;;;;;;;;:89;6843:12;;:24;;6860:6;6843:24;:16;:24;:::i;:::-;6828:12;:39;6882:37;;;;;;;;6908:1;;-1:-1:-1;;;;;6882:37:7;;;;;;;;;;;;6584:342;;:::o;779:200:3:-;851:4;-1:-1:-1;;;;;875:21:3;;867:68;;;;-1:-1:-1;;;867:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:3;:11;:20;;;;;;;;;;;;;;;779:200::o;2136:225:6:-;-1:-1:-1;;;;;2209:22:6;;2201:73;;;;-1:-1:-1;;;2201:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2310:6;;2289:38;;-1:-1:-1;;;;;2289:38:6;;;;2310:6;;;;;2289:38;;;;;2337:6;:17;;-1:-1:-1;;;;;2337:17:6;;;;;-1:-1:-1;;;;;;2337:17:6;;;;;;;;;2136:225::o;260:175:3:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:3;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:3;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:3;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:3;;;510:180::o;1274:134:5:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;707:1638:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;707:1638:1;;;-1:-1:-1;707:1638:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
    "sourcePath": "/home/crisgarner/Projects/affogato/wcc/contracts/WrappedCoffeeCoin.sol",
    "compiler": {
        "name": "solc",
        "version": "0.5.11+commit.c082d0b4"
    },
    "ast": {
        "absolutePath": "/home/crisgarner/Projects/affogato/wcc/contracts/WrappedCoffeeCoin.sol",
        "exportedSymbols": {
            "WrappedCoffeeCoin": [
                232
            ]
        },
        "id": 233,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 88,
                "literals": [
                    "solidity",
                    "^",
                    "0.5",
                    ".11"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:24:1"
            },
            {
                "absolutePath": "/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 89,
                "nodeType": "ImportDirective",
                "scope": 233,
                "sourceUnit": 1154,
                "src": "26:107:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
                "file": "/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
                "id": 90,
                "nodeType": "ImportDirective",
                "scope": 233,
                "sourceUnit": 1212,
                "src": "134:115:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/access/roles/MinterRole.sol",
                "file": "/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/access/roles/MinterRole.sol",
                "id": 91,
                "nodeType": "ImportDirective",
                "scope": 233,
                "sourceUnit": 448,
                "src": "250:113:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/ownership/Ownable.sol",
                "file": "/home/crisgarner/Projects/affogato/wcc/node_modules/@openzeppelin/contracts/ownership/Ownable.sol",
                "id": 92,
                "nodeType": "ImportDirective",
                "scope": 233,
                "sourceUnit": 749,
                "src": "364:107:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/crisgarner/Projects/affogato/wcc/contracts/IERC20WCC.sol",
                "file": "./IERC20WCC.sol",
                "id": 93,
                "nodeType": "ImportDirective",
                "scope": 233,
                "sourceUnit": 87,
                "src": "472:25:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 94,
                            "name": "ERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1153,
                            "src": "737:5:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1153",
                                "typeString": "contract ERC20"
                            }
                        },
                        "id": 95,
                        "nodeType": "InheritanceSpecifier",
                        "src": "737:5:1"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 96,
                            "name": "ERC20Detailed",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1211,
                            "src": "744:13:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Detailed_$1211",
                                "typeString": "contract ERC20Detailed"
                            }
                        },
                        "id": 97,
                        "nodeType": "InheritanceSpecifier",
                        "src": "744:13:1"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 98,
                            "name": "Ownable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 748,
                            "src": "759:7:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Ownable_$748",
                                "typeString": "contract Ownable"
                            }
                        },
                        "id": 99,
                        "nodeType": "InheritanceSpecifier",
                        "src": "759:7:1"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 100,
                            "name": "MinterRole",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 447,
                            "src": "768:10:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MinterRole_$447",
                                "typeString": "contract MinterRole"
                            }
                        },
                        "id": 101,
                        "nodeType": "InheritanceSpecifier",
                        "src": "768:10:1"
                    }
                ],
                "contractDependencies": [
                    259,
                    447,
                    748,
                    1153,
                    1211,
                    1280
                ],
                "contractKind": "contract",
                "documentation": "@notice An ERC that will represent deposited coffee to a validator.\n@dev When deploying the contract the deployer should renounce the minter role after it has added the TokenHandler as minter.",
                "fullyImplemented": true,
                "id": 232,
                "linearizedBaseContracts": [
                    232,
                    447,
                    748,
                    1211,
                    1153,
                    1280,
                    259
                ],
                "name": "WrappedCoffeeCoin",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "anonymous": false,
                        "documentation": null,
                        "id": 107,
                        "name": "LogSetCoffeeHandler",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 106,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 103,
                                    "indexed": true,
                                    "name": "_owner",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 107,
                                    "src": "809:22:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 102,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "809:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 105,
                                    "indexed": false,
                                    "name": "_contract",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 107,
                                    "src": "833:17:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 104,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "833:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "808:43:1"
                        },
                        "src": "783:69:1"
                    },
                    {
                        "constant": false,
                        "id": 109,
                        "name": "ipfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "856:23:1",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 108,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "856:6:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": null,
                        "visibility": "private"
                    },
                    {
                        "constant": false,
                        "id": 111,
                        "name": "coffeeHandler",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "883:28:1",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "883:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 119,
                            "nodeType": "Block",
                            "src": "984:2:1",
                            "statements": []
                        },
                        "documentation": null,
                        "id": 120,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "argumentTypes": null,
                                        "hexValue": "5772617070656420436f6666656520436f696e",
                                        "id": 114,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "944:21:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_9cbc214d1d7c0365aebc4918581809d40956d442dd37188db8cf0989e8919835",
                                            "typeString": "literal_string \"Wrapped Coffee Coin\""
                                        },
                                        "value": "Wrapped Coffee Coin"
                                    },
                                    {
                                        "argumentTypes": null,
                                        "hexValue": "574343",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "967:5:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_a13365ddb52365f3fdcac59eced39f8e2e264e7a4917047f1470a0dd26e16fc0",
                                            "typeString": "literal_string \"WCC\""
                                        },
                                        "value": "WCC"
                                    },
                                    {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 116,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "974:1:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    }
                                ],
                                "id": 117,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 113,
                                    "name": "ERC20Detailed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1211,
                                    "src": "930:13:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1211_$",
                                        "typeString": "type(contract ERC20Detailed)"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "930:46:1"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 112,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "927:2:1"
                        },
                        "returnParameters": {
                            "id": 118,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "984:0:1"
                        },
                        "scope": 232,
                        "src": "916:70:1",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 144,
                            "nodeType": "Block",
                            "src": "1056:152:1",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 128,
                                                "name": "_coffeeHandler",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 122,
                                                "src": "1072:14:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 127,
                                            "name": "addMinter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 405,
                                            "src": "1062:9:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 129,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1062:25:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 130,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1062:25:1"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 133,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 131,
                                            "name": "coffeeHandler",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 111,
                                            "src": "1093:13:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "id": 132,
                                            "name": "_coffeeHandler",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 122,
                                            "src": "1109:14:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1093:30:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 134,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1093:30:1"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 135,
                                            "name": "renounceMinter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 414,
                                            "src": "1129:14:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 136,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1129:16:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 137,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1129:16:1"
                                },
                                {
                                    "eventCall": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 139,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1295,
                                                    "src": "1176:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 140,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "1176:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 141,
                                                "name": "_coffeeHandler",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 122,
                                                "src": "1188:14:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 138,
                                            "name": "LogSetCoffeeHandler",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 107,
                                            "src": "1156:19:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                "typeString": "function (address,address)"
                                            }
                                        },
                                        "id": 142,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1156:47:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 143,
                                    "nodeType": "EmitStatement",
                                    "src": "1151:52:1"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 145,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": null,
                                "id": 125,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 124,
                                    "name": "onlyOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 681,
                                    "src": "1047:9:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1047:9:1"
                            }
                        ],
                        "name": "setCoffeeHandler",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 123,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 122,
                                    "name": "_coffeeHandler",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 145,
                                    "src": "1016:22:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 121,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1016:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1015:24:1"
                        },
                        "returnParameters": {
                            "id": 126,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1056:0:1"
                        },
                        "scope": 232,
                        "src": "990:218:1",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 172,
                            "nodeType": "Block",
                            "src": "1531:122:1",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 161,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "id": 157,
                                                    "name": "coffeeHandler",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 111,
                                                    "src": "1545:13:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                        {
                                                            "argumentTypes": null,
                                                            "hexValue": "30",
                                                            "id": 159,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1570:1:1",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 158,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1562:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": "address"
                                                    },
                                                    "id": 160,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1562:10:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "1545:27:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "436f666665652048616e646c6572206d75737420626520736574",
                                                "id": 162,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1574:28:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_85f475411bb89139554427865d07040e0244e8594194c40552405ae4aad38236",
                                                    "typeString": "literal_string \"Coffee Handler must be set\""
                                                },
                                                "value": "Coffee Handler must be set"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_85f475411bb89139554427865d07040e0244e8594194c40552405ae4aad38236",
                                                    "typeString": "literal_string \"Coffee Handler must be set\""
                                                }
                                            ],
                                            "id": 156,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1298,
                                                1299
                                            ],
                                            "referencedDeclaration": 1299,
                                            "src": "1537:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 163,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1537:66:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 164,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1537:66:1"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 166,
                                                "name": "account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 147,
                                                "src": "1615:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 167,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 149,
                                                "src": "1624:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 165,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1037,
                                            "src": "1609:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 168,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1609:22:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 169,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1609:22:1"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 170,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1644:4:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 155,
                                    "id": 171,
                                    "nodeType": "Return",
                                    "src": "1637:11:1"
                                }
                            ]
                        },
                        "documentation": "@notice Called when a minter wants to create new tokens.\n@dev See `ERC20._mint`.\n    * Requirements:\n    * - the caller must have the `MinterRole`.\n TODO:  Farmer must approve mint before minting",
                        "id": 173,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": null,
                                "id": 152,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 151,
                                    "name": "onlyMinter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 380,
                                    "src": "1505:10:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1505:10:1"
                            }
                        ],
                        "name": "mint",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 150,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 147,
                                    "name": "account",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 173,
                                    "src": "1465:15:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 146,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1465:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 149,
                                    "name": "amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 173,
                                    "src": "1482:14:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 148,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1482:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1464:33:1"
                        },
                        "returnParameters": {
                            "id": 155,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 154,
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 173,
                                    "src": "1525:4:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 153,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1525:4:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1524:6:1"
                        },
                        "scope": 232,
                        "src": "1451:202:1",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 200,
                            "nodeType": "Block",
                            "src": "1737:122:1",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 189,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "id": 185,
                                                    "name": "coffeeHandler",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 111,
                                                    "src": "1751:13:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                        {
                                                            "argumentTypes": null,
                                                            "hexValue": "30",
                                                            "id": 187,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1776:1:1",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 186,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1768:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": "address"
                                                    },
                                                    "id": 188,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1768:10:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "1751:27:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "436f666665652048616e646c6572206d75737420626520736574",
                                                "id": 190,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1780:28:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_85f475411bb89139554427865d07040e0244e8594194c40552405ae4aad38236",
                                                    "typeString": "literal_string \"Coffee Handler must be set\""
                                                },
                                                "value": "Coffee Handler must be set"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_85f475411bb89139554427865d07040e0244e8594194c40552405ae4aad38236",
                                                    "typeString": "literal_string \"Coffee Handler must be set\""
                                                }
                                            ],
                                            "id": 184,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1298,
                                                1299
                                            ],
                                            "referencedDeclaration": 1299,
                                            "src": "1743:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 191,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1743:66:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 192,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1743:66:1"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 194,
                                                "name": "account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 175,
                                                "src": "1821:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 195,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 177,
                                                "src": "1830:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 193,
                                            "name": "_burn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1081,
                                            "src": "1815:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 196,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1815:22:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 197,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1815:22:1"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 198,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1850:4:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 183,
                                    "id": 199,
                                    "nodeType": "Return",
                                    "src": "1843:11:1"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 201,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": null,
                                "id": 180,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 179,
                                    "name": "onlyMinter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 380,
                                    "src": "1711:10:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1711:10:1"
                            }
                        ],
                        "name": "burn",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 178,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 175,
                                    "name": "account",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 201,
                                    "src": "1671:15:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 174,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1671:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 177,
                                    "name": "amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 201,
                                    "src": "1688:14:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 176,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1688:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1670:33:1"
                        },
                        "returnParameters": {
                            "id": 183,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 182,
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 201,
                                    "src": "1731:4:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 181,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1731:4:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1730:6:1"
                        },
                        "scope": 232,
                        "src": "1657:202:1",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 208,
                            "nodeType": "Block",
                            "src": "2052:26:1",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 206,
                                        "name": "ipfsHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 109,
                                        "src": "2065:8:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "functionReturnParameters": 205,
                                    "id": 207,
                                    "nodeType": "Return",
                                    "src": "2058:15:1"
                                }
                            ]
                        },
                        "documentation": "@notice Returns the hash pointer to the file containing the details about the coffee this token represents.\n    ",
                        "id": 209,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getCoffee",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 202,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2014:2:1"
                        },
                        "returnParameters": {
                            "id": 205,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 204,
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 209,
                                    "src": "2037:13:1",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 203,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2037:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2036:15:1"
                        },
                        "scope": 232,
                        "src": "1996:82:1",
                        "stateMutability": "view",
                        "superFunction": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 230,
                            "nodeType": "Block",
                            "src": "2240:103:1",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 222,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "id": 218,
                                                                "name": "_ipfs",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 211,
                                                                "src": "2260:5:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            ],
                                                            "id": 217,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "2254:5:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                                                "typeString": "type(bytes storage pointer)"
                                                            },
                                                            "typeName": "bytes"
                                                        },
                                                        "id": 219,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2254:12:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    },
                                                    "id": 220,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "2254:19:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "30",
                                                    "id": 221,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2277:1:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "2254:24:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "546865204950465320706f696e7465722063616e6e6f7420626520656d7074792e",
                                                "id": 223,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2280:35:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_dd6b021802002606e0b6872072cf08c4f6395bea08fa303dc7909f79c4135237",
                                                    "typeString": "literal_string \"The IPFS pointer cannot be empty.\""
                                                },
                                                "value": "The IPFS pointer cannot be empty."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_dd6b021802002606e0b6872072cf08c4f6395bea08fa303dc7909f79c4135237",
                                                    "typeString": "literal_string \"The IPFS pointer cannot be empty.\""
                                                }
                                            ],
                                            "id": 216,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1298,
                                                1299
                                            ],
                                            "referencedDeclaration": 1299,
                                            "src": "2246:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 224,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2246:70:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 225,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2246:70:1"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 228,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 226,
                                            "name": "ipfsHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 109,
                                            "src": "2322:8:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "id": 227,
                                            "name": "_ipfs",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 211,
                                            "src": "2333:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "2322:16:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 229,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2322:16:1"
                                }
                            ]
                        },
                        "documentation": "@notice Updates the IPFS pointer for the information about this coffee.\n    ",
                        "id": 231,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": null,
                                "id": 214,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 213,
                                    "name": "onlyMinter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 380,
                                    "src": "2229:10:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2229:10:1"
                            }
                        ],
                        "name": "updateCoffee",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 212,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 211,
                                    "name": "_ipfs",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 231,
                                    "src": "2201:19:1",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 210,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2201:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2200:21:1"
                        },
                        "returnParameters": {
                            "id": 215,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2240:0:1"
                        },
                        "scope": 232,
                        "src": "2179:164:1",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    }
                ],
                "scope": 233,
                "src": "707:1638:1"
            }
        ],
        "src": "0:2346:1"
    },
    "functionHashes": {
        "addMinter(address)": "983b2d56",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(address,uint256)": "9dc29fac",
        "coffeeHandler()": "6e830b13",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "getCoffee()": "1d134704",
        "increaseAllowance(address,uint256)": "39509351",
        "isMinter(address)": "aa271e1a",
        "isOwner()": "8f32d59b",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "renounceMinter()": "98650275",
        "renounceOwnership()": "715018a6",
        "setCoffeeHandler(address)": "b070a4e4",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "updateCoffee(string)": "0f7962e5"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1221600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "addMinter(address)": "infinite",
            "allowance(address,address)": "760",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "656",
            "burn(address,uint256)": "infinite",
            "coffeeHandler()": "526",
            "decimals()": "436",
            "decreaseAllowance(address,uint256)": "infinite",
            "getCoffee()": "infinite",
            "increaseAllowance(address,uint256)": "infinite",
            "isMinter(address)": "infinite",
            "isOwner()": "539",
            "mint(address,uint256)": "infinite",
            "name()": "infinite",
            "owner()": "471",
            "renounceMinter()": "infinite",
            "renounceOwnership()": "22600",
            "setCoffeeHandler(address)": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "488",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "infinite",
            "updateCoffee(string)": "infinite"
        }
    }
}